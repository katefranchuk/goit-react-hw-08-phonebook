{"version":3,"file":"static/js/162.4cc1a4e2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contactsSelectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","components/utils/capitalizeFirstLetter.js","components/ContactList/ContactList.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: ${props => props.theme.spacing(64)};\n\n  @media (min-width: 768px) {\n    max-width: ${props => props.theme.spacing(90)};\n  }\n`;\n\n\nexport const FormLabel = styled.label`\n  font-size: ${props => props.theme.fontSizes.large};\n  font-weight: 500;\n  margin-bottom: ${props => props.theme.spacing(2)};\n`;\n\nexport const FormInput = styled.input`\n  border: 1px solid ${props => props.theme.colors.dark};\n  border-radius: ${props => props.theme.radii.normal};\n  color: ${props => props.theme.colors.gray};\n  font-size: ${props => props.theme.fontSizes.medium};\n  height: ${props => props.theme.spacing(7)};\n  margin-bottom: ${props => props.theme.spacing(4)};\n  padding: ${props => props.theme.spacing(1)};\n  outline: none;\n\n  &::placeholder {\n    font-size: ${props => props.theme.fontSizes.small};\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  max-width: 150px;\n  width: 100%;\n  margin-bottom: ${props => props.theme.spacing(6)};\n  padding-block: ${props => props.theme.spacing(1)};\n  border: 1px solid ${props => props.theme.colors.dark};\n  border-radius: ${props => props.theme.radii.normal};\n  &:hover {\n    box-shadow: ${props => props.theme.shadows.small};\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getLoading = state => state.contacts.isLoading;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n\n  (friends, filter) => {\n    return friends.filter(friend =>\n      friend.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nconst contactsSelectors = {\n  getFilter,\n  getLoading,\n  getFilteredContacts,\n};\nexport default contactsSelectors;\n","import { useSelector } from 'react-redux';\nimport contactsSelectors from 'redux/contacts/contactsSelectors';\n\nexport const useContacts = () => {\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n\n  return {\n    isLoading,\n    filter,\n    contacts,\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\n\nimport { nanoid } from 'nanoid';\nimport { capitalizeFirstLetter } from 'components/utils/capitalizeFirstLetter';\n\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactForm = () => {\n  const [userData, setUserData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const { contacts } = useContacts();\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const capitalizedContactName = capitalizeFirstLetter(userData.name);\n\n    const isExist = contacts.some(\n      contact => contact.name.toLowerCase() === userData.name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${capitalizedContactName} is already in contacts`);\n      formReset();\n      return;\n    }\n    dispatch(\n      addContact({ ...userData, name: capitalizedContactName, id: nanoid() })\n    );\n\n    formReset();\n  };\n\n  const formReset = () => {\n    setUserData({ name: '', number: '' });\n  };\n\n  const { name, number } = userData;\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <FormLabel htmlFor=\"name\">Name</FormLabel>\n      <FormInput\n        value={name}\n        placeholder=\"Rosie Simpson\"\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <FormLabel htmlFor=\"number\">Number</FormLabel>\n      <FormInput\n        value={number}\n        onChange={handleChange}\n        placeholder=\"385-928-7370\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n};\n","export const capitalizeFirstLetter = str =>\n  str\n    .toLowerCase()\n    .split(' ')\n    .map(s => s[0].toUpperCase() + s.substring(1))\n    .join(' ');","import styled from 'styled-components';\n\nexport const ContactListEl = styled.ul`\n  max-width: ${props => props.theme.spacing(64)};\n\n  @media (min-width: 768px) {\n    max-width: ${props => props.theme.spacing(90)};\n  }\n`;\nexport const ContactListItem = styled.li`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\nexport const ContactListButton = styled.button`\n  padding-block: ${props => props.theme.spacing(1)};\n  padding-inline: ${props => props.theme.spacing(2)};\n  border: 1px solid ${props => props.theme.colors.dark};\n  border-radius: ${props => props.theme.radii.normal};\n  &:hover {\n    box-shadow: ${props => props.theme.shadows.small};\n  }\n`;\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"140\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","import {\n  ContactListEl,\n  ContactListItem,\n  ContactListButton,\n} from './ContactList.styled';\n\nimport { useDispatch } from 'react-redux';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactList = () => {\n  const { isLoading, contacts } = useContacts();\n  const dispatch = useDispatch();\n\n  if (!contacts.length) return;\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ContactListEl>\n          {contacts.map(({ id, name, number }) => (\n            <ContactListItem key={id}>\n              <p>\n                {name}: {number}\n              </p>\n              <ContactListButton\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </ContactListButton>\n            </ContactListItem>\n          ))}\n        </ContactListEl>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: inline-block;\n  font-size: ${props => props.theme.fontSizes.large};\n  font-weight: 500;\n  margin-bottom: ${props => props.theme.spacing(2)};\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  width: ${props => props.theme.spacing(64)};\n  height: ${props => props.theme.spacing(7)};\n  margin-bottom: ${props => props.theme.spacing(4)};\n  border: 1px solid ${props => props.theme.colors.dark};\n  border-radius: ${props => props.theme.radii.normal};\n  color: ${props => props.theme.colors.gray};\n  font-size: ${props => props.theme.fontSizes.medium};\n  outline: none;\n\n  @media (min-width: 768px) {\n    width: ${props => props.theme.spacing(90)};\n  }\n`;\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n\n  const handleFilterChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from 'components/Container/Container.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useContacts } from 'hooks/useContacts';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contactsOperations';\nimport { Box } from 'styledSystem/Box';\nimport { Title } from 'styledSystem/Title';\n\nconst ContactsPage = () => {\n  const { isLoading, contacts } = useContacts();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Box p={4} as=\"section\">\n      <Container>\n        <Title fontSize={32} mb={3} as=\"h1\">\n          Phonebook\n        </Title>\n        <ContactForm />\n        <Title fontSize={24} mb={3} as=\"h2\">\n          Contacts\n        </Title>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {contacts.length !== 0 ? (\n              <>\n                <Filter />\n                <ContactList />\n              </>\n            ) : (\n              <p>There are no contacts.</p>\n            )}\n          </>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","props","theme","spacing","FormLabel","fontSizes","large","FormInput","colors","dark","radii","normal","gray","medium","small","FormButton","shadows","getFilter","state","contacts","filter","getLoading","isLoading","getFilteredContacts","createSelector","items","friends","friend","name","toLowerCase","includes","useContacts","useSelector","contactsSelectors","ContactForm","useState","number","userData","setUserData","dispatch","useDispatch","handleChange","event","currentTarget","value","formReset","autoComplete","onSubmit","preventDefault","capitalizedContactName","split","map","s","toUpperCase","substring","join","some","contact","alert","addContact","id","nanoid","htmlFor","placeholder","onChange","type","pattern","title","required","ContactListEl","ContactListItem","ContactListButton","Loader","style","display","justifyContent","strokeColor","strokeWidth","animationDuration","width","visible","ContactList","length","onClick","deleteContact","FilterLabel","FilterInput","Filter","setFilter","useEffect","getContacts","Box","p","as","Title","fontSize","mb"],"sourceRoot":""}